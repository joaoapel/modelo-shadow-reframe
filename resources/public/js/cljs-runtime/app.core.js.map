{"version":3,"sources":["app/core.cljs"],"mappings":";AAkBA,AAAA,AAAMA;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;AAKA,AAAA,AAAMC,AAAOC;AAAb,AACE,AAAA,AAACC,AAAgBD,AAAG,AAAA,AAACE;;AAIvB,AAAA,AAAcC;AAAd,AACE,AAACJ,AAAMD","names":["app.core/main-component","app.core/mount","c","reagent.core.render","js/document.getElementById","app.core/init"],"sourcesContent":["(ns app.core\n  (:require [reagent.core :as reagent]))\n\n\n;; Para conectar o Shadow no Emacs, com o yarn start j\u00e1 iniciado\n;; SPC m C\n;; localhost: 9000\n;; shadow\n;; :app\n\n;; Direto do Emacs\n;; M x cider-jack-in-cljs, ou SPC m \"\n;; shadow\n;; :app\n;; dentro do repl: (ns core) muda para este ns\n\n;; Componentes do Hiccup s\u00e3o fun\u00e7\u00f5es que retornam HTML\n\n(defn main-component []\n  [:div\n   [:h1 {:class \"text-4xl font-bold\"} \"Primeiro componente !!\"]])\n\n;;Vai renderizar a fun\u00e7\u00e3o app, no elemento root do HTML\n(defn mount [c]\n  (reagent/render [c] (js/document.getElementById \"root\")))\n\n\n\n(defn ^export init []\n  (mount main-component))\n"]}