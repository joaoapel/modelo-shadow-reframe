{"version":3,"sources":["devtools/reporter.cljs"],"mappings":";AAIA,AAAA,AAAKA;AAIL,AAAA,AAAA,AAAAC,AAAMM;AAAN,AAAA,AAAAL,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAK,AAAA,AAAA,AAAA,AAAAF;;;AAAA,AAAA,AAAA,AAAA,AAAAG,AAAMD,AAAwBS;AAA9B,AAAA,AAAAP,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAAmCQ;AAAnC,AAAAP,AAAAD,AAAA,AAAA,AAA2CS;AAA3C,AACE,AAAA,AACE,AAAME,AAAQ,AAAI,AAAWC,AAASL,AACtB,AAAAM,AAAI,AAAWN;AAAf,AAAA,AAAAM;AAAAA;;AAAkBN;;AAClBA;AAFhB,AAAA,AAAA,AAAA,AAGMO,AAGY,AAAA,AAASH;AACrBI,AAAY,AAAA,AAAA,AAAW,AAACC,AAAmB,AAAA,AAAIR,AAAQ,AAAA,AAAA,AAAUA;AACjES,AAAW,AAAI,AAAA,AAAA,AAAOR,AACTA,AACA,AAAA,AAAA,AAAA,AAAqDlB;AAVxE,AAWM2B,AAAaH,AAAYR,AAAEU;AAXjC,AAYE,AAAME,AAAEC;AACFC,AAAgB,AAAA,AAAMF;AACtBG,AAAI,AAAA,AAAMH;AACVI,AAAU,AAAA,AAAMJ;AAHtB,AAIE,AAAQE;AAAR;AAAA,AAAA,AAAA,AAAAT,AAAA;;;AACA,AAAQU;AAAR;AAAA,AAAA,AAAA,AAAAV,AAAA;;;AACA,AAAQW;AAAR;AAAA,AAAA,AAAA,AAAAX,AAAA;;;AACA,AAAQS,AAAgBF,AAAEL;;AAC1B,AAAQQ,AAAIH,AAAED;;AACd,AAAOK,AAAUJ;AAtBvB,AAAAT,AAuBkBH;AAvBlB,AAwBI,AAAA,AAAQa,AAAkDb;;;AAzBhE,AAAA,AAAA,AAAMT;;AAAN;AAAA,AAAA,AAAA,AAAAI,AAAMJ;AAAN,AAAA,AAAAK,AAAA,AAAAC,AAAAF;AAAAA,AAAA,AAAAG,AAAAH;AAAA,AAAA,AAAAI,AAAA;AAAA,AAAA,AAAAA,AAAAH,AAAAD;;;AAAA","names":["devtools.reporter/issues-url","var_args","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","devtools.reporter/report-internal-error!","p__25864","vec__25865","cljs.core.nth","seq25860","G__25861","cljs.core/first","cljs.core/next","self__4723__auto__","e","context","footer","e25868","message","js/Error","or__4126__auto__","header","context-msg","devtools.util/get-lib-info","footer-msg","details","c","js/console","group-collapsed","log","group-end"],"sourcesContent":["(ns devtools.reporter\n  (:require-macros [devtools.oops :refer [oget]])\n  (:require [devtools.util :as util]))\n\n(def issues-url \"https://github.com/binaryage/cljs-devtools/issues\")\n\n; -- internal errors  -------------------------------------------------------------------------------------------------------\n\n(defn report-internal-error! [e & [context footer]]\n  (try\n    (let [message (if (instance? js/Error e)\n                    (or (.-message e) e)\n                    e)\n          header #js [\"%cCLJS DevTools Error%c%s\"\n                      \"background-color:red;color:white;font-weight:bold;padding:0px 3px;border-radius:2px;\"\n                      \"color:red\"\n                      (str \" \" message)]\n          context-msg (str \"In \" (util/get-lib-info) (if context (str \", \" context \".\") \".\") \"\\n\\n\")\n          footer-msg (if (some? footer)\n                       footer\n                       (str \"\\n\\n\" \"---\\n\" \"Please report the issue here: \" issues-url))\n          details #js [context-msg e footer-msg]]\n      (let [c js/console\n            group-collapsed (oget c \"groupCollapsed\")\n            log (oget c \"log\")\n            group-end (oget c \"groupEnd\")]\n        (assert group-collapsed)\n        (assert log)\n        (assert group-end)\n        (.apply group-collapsed c header)\n        (.apply log c details)\n        (.call group-end c)))\n    (catch :default e\n      (.error js/console \"FATAL: report-internal-error! failed\" e))))\n"]}